$date
  Sat Feb 22 21:19:10 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module half_adder_antonio_tb $end
$var reg 1 ! a_signal $end
$var reg 1 " b_signal $end
$var reg 1 # sum_result_signal $end
$var reg 1 $ carry_result_signal $end
$scope module instancia_half_adder_antonio $end
$var reg 1 % a_parcela $end
$var reg 1 & b_parcela $end
$var reg 1 ' sum_result $end
$var reg 1 ( carry_result $end
$var reg 1 ) y_and_result $end
$var reg 1 * y_xor_result $end
$scope module instancia_and_gate $end
$var reg 1 + a_and_input $end
$var reg 1 , b_and_input $end
$var reg 1 - y_and_output $end
$upscope $end
$scope module instancia_xor_gate_antonio $end
$var reg 1 . a_xor_input $end
$var reg 1 / b_xor_input $end
$var reg 1 0 y_xor_output $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
X!
X"
X#
X$
X%
X&
X'
X(
X)
X*
X+
X,
X-
X.
X/
X0
#10000000
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
#20000000
1"
1#
1&
1'
1*
1,
1/
10
#30000000
1!
0"
1%
0&
1+
0,
1.
0/
#40000000
1"
0#
1$
1&
0'
1(
1)
0*
1,
1-
1/
00
#50000000
